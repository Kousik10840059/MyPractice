Create 2 instances one worker one controller
set DNS -> vim /etc/hosts
go to
vim /etc/ssh/sshd_config -> 40, 65 yes -> in all
systemctl restart sshd
systemctl enable sshd

GENERATE KEY IN CONTROLLER
ssh-keygen
cd. ssh/

set password of root in both the nodes
ssh-copy-id root@privateipofnode  -> to be done in controller machine
or go and paste controller's id_rsa.pub to node cd .ssh/ cat authorized\_keys
scp /etc/hosts root@privateipofnode:/etc/hosts

IN CONTROLLER
yum update -y
yum install pip
yum install ansible-core\*
ansible --version
cd /etc/
mkdir ansible if not present
or else go to cd /etc/ansible

Go to sir's repo -> https://github.com/sanjayguruji/ansible-code
copy content of ansible.cfg
and create a vim ansible.cfg and paste the content
ansible --version
make group wise implementation

in cd /etc/ansible
vim hosts
[dev-server]
machine name
------------------------------

mkdir /project
cd /project/
ansible-galaxy collection install amazon.aws
pip install boto3 botocore
vim creds.yaml
aws_access_key: yourkey
aws_secret_key: yourpass

write playbook.yaml
---
- name: creating ec2 instance
 hosts: localhost
 vars_files:
     - creds.yaml
 tasks:
       - name: creating Ec2 instance via Ansible
         amazon.aws.ec2_instance:
           name: k8s-master
           instance_type: t3.micro
           image_id: ami-00ca32bbc84273381
           vpc_subnet_id: subnet-05f33bfe5973456bb
           security_group: sg-0d9daa8276cca900d
           key_name: prac-key
           region: us-east-1
           aws_access_key: "{{ aws_access_key }}"
           aws_secret_key: "{{ aws_secret_key }}"
           count: 1
           state: present
save and quit
ansible-playbook firstplaybook.yaml --syntax-check
ansible-playbook firstplaybook.yaml -C  (dry run)
ansible-playbook firstplaybook.yaml
